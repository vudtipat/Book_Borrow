{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getThemeFromTypeName = getThemeFromTypeName;\nexports.removeTypeTheme = removeTypeTheme;\nexports.withThemeSuffix = withThemeSuffix;\nexports.alias = alias;\nexports.svgBaseProps = void 0;\n\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\n\nvar _svgBaseProps;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n\n\nvar svgBaseProps = (_svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor'\n}, _defineProperty(_svgBaseProps, 'aria-hidden', 'true'), _defineProperty(_svgBaseProps, \"focusable\", 'false'), _svgBaseProps);\nexports.svgBaseProps = svgBaseProps;\nvar fillTester = /-fill$/;\nvar outlineTester = /-o$/;\nvar twoToneTester = /-twotone$/;\n\nfunction getThemeFromTypeName(type) {\n  var result = null;\n\n  if (fillTester.test(type)) {\n    result = 'filled';\n  } else if (outlineTester.test(type)) {\n    result = 'outlined';\n  } else if (twoToneTester.test(type)) {\n    result = 'twoTone';\n  }\n\n  return result;\n}\n\nfunction removeTypeTheme(type) {\n  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');\n}\n\nfunction withThemeSuffix(type, theme) {\n  var result = type;\n\n  if (theme === 'filled') {\n    result += '-fill';\n  } else if (theme === 'outlined') {\n    result += '-o';\n  } else if (theme === 'twoTone') {\n    result += '-twotone';\n  } else {\n    (0, _warning[\"default\"])(false, \"This icon '\".concat(type, \"' has unknown theme '\").concat(theme, \"'\"));\n  }\n\n  return result;\n} // For alias or compatibility\n\n\nfunction alias(type) {\n  switch (type) {\n    case 'cross':\n      return 'close';\n\n    default:\n  }\n\n  return type;\n}","map":{"version":3,"sources":["E:/web/bookstore/node_modules/antd/lib/icon/utils.js"],"names":["Object","defineProperty","exports","value","getThemeFromTypeName","removeTypeTheme","withThemeSuffix","alias","svgBaseProps","_warning","_interopRequireDefault","require","_svgBaseProps","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","width","height","fill","fillTester","outlineTester","twoToneTester","type","result","test","replace","theme","concat"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getThemeFromTypeName = getThemeFromTypeName;\nexports.removeTypeTheme = removeTypeTheme;\nexports.withThemeSuffix = withThemeSuffix;\nexports.alias = alias;\nexports.svgBaseProps = void 0;\n\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\n\nvar _svgBaseProps;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\nvar svgBaseProps = (_svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor'\n}, _defineProperty(_svgBaseProps, 'aria-hidden', 'true'), _defineProperty(_svgBaseProps, \"focusable\", 'false'), _svgBaseProps);\nexports.svgBaseProps = svgBaseProps;\nvar fillTester = /-fill$/;\nvar outlineTester = /-o$/;\nvar twoToneTester = /-twotone$/;\n\nfunction getThemeFromTypeName(type) {\n  var result = null;\n\n  if (fillTester.test(type)) {\n    result = 'filled';\n  } else if (outlineTester.test(type)) {\n    result = 'outlined';\n  } else if (twoToneTester.test(type)) {\n    result = 'twoTone';\n  }\n\n  return result;\n}\n\nfunction removeTypeTheme(type) {\n  return type.replace(fillTester, '').replace(outlineTester, '').replace(twoToneTester, '');\n}\n\nfunction withThemeSuffix(type, theme) {\n  var result = type;\n\n  if (theme === 'filled') {\n    result += '-fill';\n  } else if (theme === 'outlined') {\n    result += '-o';\n  } else if (theme === 'twoTone') {\n    result += '-twotone';\n  } else {\n    (0, _warning[\"default\"])(false, \"This icon '\".concat(type, \"' has unknown theme '\").concat(theme, \"'\"));\n  }\n\n  return result;\n} // For alias or compatibility\n\n\nfunction alias(type) {\n  switch (type) {\n    case 'cross':\n      return 'close';\n\n    default:\n  }\n\n  return type;\n}"]},"metadata":{},"sourceType":"script"}