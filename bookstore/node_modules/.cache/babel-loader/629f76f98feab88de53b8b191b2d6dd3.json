{"ast":null,"code":"var _jsxFileName = \"E:\\\\web\\\\bookstore\\\\src\\\\Component\\\\Homepage.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport './custom.css';\nimport { List, Card, Button, Input } from 'antd';\nimport store from \"store\";\nimport Layout from '../Layout/Layout';\nexport default class Homepage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllbook = async () => {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      await fetch('/allbook', requestOptions).then(response => response.json()).then(myJson => {\n        console.log(myJson);\n      });\n    };\n\n    this.formRef = React.createRef();\n    this.layout = {\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      }\n    };\n    this.tailLayout = {\n      wrapperCol: {\n        offset: 5,\n        span: 16\n      }\n    };\n    this.tailLayout1 = {\n      wrapperCol: {\n        offset: 6,\n        span: 16\n      }\n    };\n    this.getAllbook();\n  }\n\n  render() {\n    var Search = Input.Search;\n    const data = [];\n    return /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      placeholder: \"input search text\",\n      style: {\n        width: 500\n      },\n      onSearch: value => console.log(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }), data.length == 0 ? /*#__PURE__*/React.createElement(List, {\n      grid: {\n        gutter: 16,\n        column: 4\n      },\n      dataSource: data,\n      pagination: {\n        onChange: page => {\n          console.log(page);\n        },\n        pageSize: 12\n      },\n      renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => alert(\"Hello from here\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        hoverable: true,\n        style: {\n          width: 300\n        },\n        title: item.title,\n        cover: /*#__PURE__*/React.createElement(\"img\", {\n          alt: \"example\",\n          src: item.url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 80\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, \"Author : \", item.author), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, \"Year: \", item.year)))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(List, {\n      grid: {\n        gutter: 16,\n        column: 4\n      },\n      dataSource: data,\n      pagination: {\n        onChange: page => {\n          console.log(page);\n        },\n        pageSize: 12\n      },\n      renderItem: item => /*#__PURE__*/React.createElement(List.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => alert(\"Hello from here\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        hoverable: true,\n        style: {\n          width: 300\n        },\n        title: item.title,\n        cover: /*#__PURE__*/React.createElement(\"img\", {\n          alt: \"example\",\n          src: item.url,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 80\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, \"Author : \", item.author), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, \"Year: \", item.year)))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:/web/bookstore/src/Component/Homepage.js"],"names":["React","List","Card","Button","Input","store","Layout","Homepage","Component","constructor","props","getAllbook","requestOptions","method","headers","fetch","then","response","json","myJson","console","log","formRef","createRef","layout","labelCol","span","wrapperCol","tailLayout","offset","tailLayout1","render","Search","data","width","value","length","gutter","column","onChange","page","pageSize","item","alert","title","url","author","year"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './custom.css'\r\nimport { List, Card , Button, Input } from 'antd';\r\nimport store from \"store\";\r\nimport Layout from '../Layout/Layout';\r\nexport default class Homepage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.getAllbook();\r\n    \r\n  }\r\n\r\n  getAllbook = async() => {\r\n    const requestOptions = {\r\n      method: 'GET',\r\n      headers: { \r\n          'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    await fetch('/allbook', requestOptions)\r\n      .then(response=> response.json())\r\n      .then(myJson=> {\r\n        console.log(myJson);\r\n      }) \r\n  };\r\n\r\n  formRef = React.createRef();\r\n\r\n   layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 16,\r\n    },\r\n  };\r\n\r\n  tailLayout = {\r\n    wrapperCol: {\r\n      offset: 5,\r\n      span: 16,\r\n    },\r\n  };\r\n\r\n  tailLayout1 = {\r\n    wrapperCol: {\r\n      offset: 6,\r\n      span: 16,\r\n    },\r\n  };\r\n  \r\n  render() {\r\n    var Search = Input.Search;\r\n    const data = [];\r\n\r\n    return (\r\n      <Layout>\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          style={{ width: 500 }}\r\n          onSearch={value => console.log(value)}\r\n        />\r\n        <br/><br/><br/>\r\n        {\r\n          data.length==0 ? (\r\n            <List\r\n          grid={{ gutter: 16, column: 4 }}\r\n          dataSource={data}\r\n          pagination={{\r\n            onChange: page => {\r\n              console.log(page);\r\n            },\r\n            pageSize: 12,\r\n          }}\r\n          renderItem={item => (\r\n            <List.Item>\r\n              <div onClick={() => alert(\"Hello from here\")}>\r\n              <Card hoverable style={{ width: 300 }} title={item.title} cover={<img alt=\"example\" src={item.url} />}>\r\n                <p>Author : {item.author}</p>\r\n                <p>Year: {item.year}</p>\r\n              </Card>\r\n              </div>\r\n            </List.Item>\r\n          )}\r\n        />\r\n          ) : (\r\n          <List\r\n          grid={{ gutter: 16, column: 4 }}\r\n          dataSource={data}\r\n          pagination={{\r\n            onChange: page => {\r\n              console.log(page);\r\n            },\r\n            pageSize: 12,\r\n          }}\r\n          renderItem={item => (\r\n            <List.Item>\r\n              <div onClick={() => alert(\"Hello from here\")}>\r\n              <Card hoverable style={{ width: 300 }} title={item.title} cover={<img alt=\"example\" src={item.url} />}>\r\n                <p>Author : {item.author}</p>\r\n                <p>Year: {item.year}</p>\r\n              </Card>\r\n              </div>\r\n            </List.Item>\r\n          )}\r\n        />\r\n          )\r\n        }\r\n      </Layout>\r\n      \r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}